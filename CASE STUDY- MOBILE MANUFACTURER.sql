--SQL Advance Case Study
Select* from DIM_CUSTOMER
Select* from FACT_TRANSACTIONS
Select* from DIM_DATE
Select* from DIM_LOCATION
Select* from DIM_MODEL
Select* from DIM_MANUFACTURER

--Q1--BEGIN 
	SELECT DISTINCT STATE
	FROM FACT_TRANSACTIONS AS A
	INNER JOIN DIM_LOCATION AS B
	ON A.IDLOCATION = B.IDLOCATION
	WHERE YEAR(DATE) >= '2005'






--Q1--END

--Q2--BEGIN
		SELECT TOP 1 STATE
		FROM DIM_LOCATION AS A
		INNER JOIN FACT_TRANSACTIONS AS B
		ON A.IDLOCATION= B.IDLOCATION
		LEFT JOIN DIM_MODEL AS C
		ON B.IDMODEL= C.IDMODEL
		WHERE COUNTRY='US' AND IDMANUFACTURER='12'
		GROUP BY STATE








--Q2--END

--Q3--BEGIN      
	SELECT DISTINCT STATE,ZIPCODE, MODEL_NAME,COUNT(IDCUSTOMER) AS TRANSACTIONS
	FROM FACT_TRANSACTIONS AS A
	INNER JOIN DIM_LOCATION AS B
	ON A.IDLOCATION= B.IDLOCATION
	LEFT JOIN DIM_MODEL AS C
	ON C.IDMODEL= A.IDMODEL
	GROUP BY STATE,ZIPCODE,MODEL_NAME

	








--Q3--END

--Q4--BEGIN
    SELECT TOP 1 MODEL_NAME,MIN(UNIT_PRICE)AS LOWEST_PRICE
	FROM DIM_MODEL
	GROUP BY MODEL_NAME






--Q4--END

--Q5--BEGIN
     
SELECT MANUFACTURER_NAME, MODEL_NAME, AVG(UNIT_PRICE) AS AVG_PRICE FROM DIM_MODEL AS X
INNER JOIN DIM_MANUFACTURER AS Y
ON X.IDMANUFACTURER = Y.IDMANUFACTURER
WHERE MANUFACTURER_NAME IN 
(
SELECT TOP 5 MANUFACTURER_NAME FROM FACT_TRANSACTIONS AS A
INNER JOIN DIM_MODEL AS B
ON A.IDMODEL = B.IDMODEL
INNER JOIN DIM_MANUFACTURER AS C
ON C.IDMANUFACTURER = B.IDMANUFACTURER
GROUP BY MANUFACTURER_NAME
ORDER BY SUM(QUANTITY)
)
GROUP BY MODEL_NAME,MANUFACTURER_NAME
ORDER BY MANUFACTURER_NAME



--Q5--END

--Q6--BEGIN
      SELECT CUSTOMER_NAME, AVG(TOTALPRICE) AS AVERAGE,YEAR(DATE)AS YEAR
	  FROM DIM_CUSTOMER AS A
	  INNER JOIN FACT_TRANSACTIONS AS B
	  ON A.IDCUSTOMER= B.IDCUSTOMER
	  GROUP BY CUSTOMER_NAME,YEAR(DATE)
	  HAVING YEAR(DATE)= '2009' AND AVG(TOTALPRICE)> '500'











--Q6--END
	
--Q7--BEGIN  
	SELECT MODEL_NAME FROM
	(SELECT TOP 5 SUM(QUANTITY) AS QUANTITY,MODEL_NAME
	FROM FACT_TRANSACTIONS AS A
	INNER JOIN DIM_MODEL AS B
	ON A.IDMODEL= B.IDMODEL
	WHERE YEAR(DATE) = '2008'
	GROUP BY MODEL_NAME)AS X

	INTERSECT
	SELECT MODEL_NAME FROM
	(SELECT TOP 5 SUM(QUANTITY) AS QUANTITY,MODEL_NAME
	FROM FACT_TRANSACTIONS AS A
	INNER JOIN DIM_MODEL AS B
	ON A.IDMODEL= B.IDMODEL
	WHERE YEAR(DATE) = '2009'
	GROUP BY MODEL_NAME) AS Y

	INTERSECT
	SELECT MODEL_NAME FROM
	(SELECT TOP 5 SUM(QUANTITY) AS QUANTITY,MODEL_NAME
	FROM FACT_TRANSACTIONS AS A
	INNER JOIN DIM_MODEL AS B
	ON A.IDMODEL= B.IDMODEL
	WHERE YEAR(DATE) = '2010'
	GROUP BY MODEL_NAME) AS Z

--Q7--END	

--Q8--BEGIN
     SELECT IDMANUFACTURER,SALES,YEARS FROM
	 (SELECT C.IDMANUFACTURER, MANUFACTURER_NAME,YEAR(DATE) AS YEARS,SUM(TOTALPRICE) AS SALES,
	 DENSE_RANK() OVER(ORDER BY SUM(TOTALPRICE) DESC) AS RANKS
	 FROM FACT_TRANSACTIONS AS A
	 INNER JOIN DIM_MODEL AS B
	 ON A.IDMODEL= B.IDMODEL
	 INNER JOIN DIM_MANUFACTURER AS C
	 ON C.IDMANUFACTURER= B.IDMANUFACTURER
	 WHERE YEAR(DATE)='2009' 
	 GROUP BY YEAR(DATE), C.IDMANUFACTURER, MANUFACTURER_NAME) AS X 
	 WHERE RANKS='2' 
	 UNION ALL

	 SELECT IDMANUFACTURER,SALES,YEARS FROM
	 (SELECT C.IDMANUFACTURER, MANUFACTURER_NAME,YEAR(DATE) AS YEARS,SUM(TOTALPRICE) AS SALES,
	 DENSE_RANK() OVER(ORDER BY SUM(TOTALPRICE) DESC) AS RANKS
	 FROM FACT_TRANSACTIONS AS A
	 INNER JOIN DIM_MODEL AS B
	 ON A.IDMODEL= B.IDMODEL
	 INNER JOIN DIM_MANUFACTURER AS C
	 ON C.IDMANUFACTURER= B.IDMANUFACTURER
	 WHERE YEAR(DATE)='2010' 
	 GROUP BY YEAR(DATE), C.IDMANUFACTURER, MANUFACTURER_NAME) AS Y
	 WHERE RANKS='2' 
	

	


--Q8--END
--Q9--BEGIN
	 SELECT MANUFACTURER_NAME
	 FROM FACT_TRANSACTIONS AS A
	 INNER JOIN DIM_MODEL AS B ON A.IDMODEL= B.IDMODEL
	 INNER JOIN DIM_MANUFACTURER AS C ON B.IDMANUFACTURER= C.IDMANUFACTURER
	 WHERE YEAR(DATE)='2010'
	 EXCEPT
	 SELECT MANUFACTURER_NAME
	 FROM FACT_TRANSACTIONS AS A
	 INNER JOIN DIM_MODEL AS B ON A.IDMODEL= B.IDMODEL
	 INNER JOIN DIM_MANUFACTURER AS C ON B.IDMANUFACTURER= C.IDMANUFACTURER
	 WHERE YEAR(DATE)='2009'
	






--Q9--END

--Q10--BEGIN

----THROUGH SUBQUERY
	SELECT*,(AVG_SPEND-YOY_CHANGE)/YOY_CHANGE*100 AS PERCENT_CHANGE
	FROM
	(SELECT*,LAG(AVG_SPEND,1)OVER(ORDER BY AVG_QTY DESC) AS YOY_CHANGE
	FROM
	( SELECT TOP 10 CUSTOMER_NAME,AVG(TOTALPRICE) AS AVG_SPEND, AVG(QUANTITY) AS AVG_QTY,
	YEAR(DATE) AS YEARS
	FROM FACT_TRANSACTIONS AS A
    INNER JOIN DIM_CUSTOMER AS B
	ON A.IDCUSTOMER= B.IDCUSTOMER
	GROUP BY YEAR(DATE),A.IDCUSTOMER,CUSTOMER_NAME
	ORDER BY AVG_SPEND)
	AS X) 
	AS Y
	
	
	--THROUGH CTE


	WITH TOP_10_CUSTOMERS AS(
	SELECT*, LAG(AVG_SPEND,1)OVER(ORDER BY AVG_QTY DESC) AS YOY_CHANGE
	FROM
	(SELECT TOP 10 CUSTOMER_NAME,AVG(TOTALPRICE) AS AVG_SPEND, AVG(QUANTITY) AS AVG_QTY,
	YEAR(DATE) AS YEARS
	FROM FACT_TRANSACTIONS AS A
	INNER JOIN DIM_CUSTOMER AS B
	ON A.IDCUSTOMER= B.IDCUSTOMER
	GROUP BY CUSTOMER_NAME,YEAR(DATE),A.IDCUSTOMER ORDER BY AVG_SPEND DESC) AS X)

	SELECT* FROM TOP_10_CUSTOMERS



--Q10--END
	